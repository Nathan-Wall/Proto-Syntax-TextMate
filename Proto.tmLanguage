<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>Proto Syntax</string>
	<key>fileTypes</key>
	<array>
		<string>pr</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/usr/bin/env node</string>
	<key>foldingStartMarker</key>
	<string>^.*\bfunction\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~J</string>
	<key>name</key>
	<string>Proto</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>proto shebang</string>
			<key>match</key>
			<string>^#!/usr/bin/env proto</string>
			<key>name</key>
			<string>comment.line.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: Sound = like Wave</string>
			<key>match</key>
			<string>([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(like)\s+([a-zA-Z_?.$][\w?.$]*)</string>
			<key>name</key>
			<string>meta.class.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.js</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: Sound.play = fn of 3 :{ … }</string>
			<key>match</key>
			<string>([a-zA-Z_?.$][\w?.$]*)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(fn|gen|async)\s*(?:(\()(.*?)(\)))?(?:\s+(of)\s+|\s*\:)</string>
			<key>name</key>
			<string>meta.function.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.js</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: play = fn of 2 :{ … }</string>
			<key>match</key>
			<string>([a-zA-Z_?$][\w?$]*)\s*(=)\s*(fn|gen|async)\s*(?:(\()(.*?)(\)))?(?:\s+(of)\s+|\s*\:)</string>
			<key>name</key>
			<string>meta.function.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match regular function like: fn myFunc(arg) { … }</string>
			<key>match</key>
			<string>\b(fn|gen|async)\s+([a-zA-Z_$]\w*)?\s*(?:(\()(.*?)(\)))?(?:\s+(of)\s+|\s*\:)</string>
			<key>name</key>
			<string>meta.function.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: foobar: function() { … }</string>
			<key>match</key>
			<string>\b([a-zA-Z_?.$][\w?.$]*)\s*:\s*\b(fn|gen|async)?\s*(?:(\()(.*?)(\)))?(?:\s+(of)\s+|\s*\:)</string>
			<key>name</key>
			<string>meta.function.json.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.js</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.js</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.js</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Attempt to match "foo": function</string>
			<key>match</key>
			<string>(?:((')([^']*)('))|((")([^"]*)(")))\s*:\s*\b(fn|gen|async)?\s*(?:(\()(.*?)(\)))?(?:\s+(of)\s+|\s*\:)</string>
			<!-- <string>(?:((')(.*?)('))|((")(.*?)(")))\s*:\s*\b(function)?\s*(\()(.*?)(\))</string> -->
			<key>name</key>
			<string>meta.function.json.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.new.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(new)\s+(\w+(?:\.\w*)?)\s*\(</string>
			<key>name</key>
			<string>meta.class.instance.constructor</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(console)\b</string>
			<key>name</key>
			<string>entity.name.type.object.js.firebug</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\.(warn|info|log|error|time|timeEnd|assert)\b</string>
			<key>name</key>
			<string>support.function.js.firebug</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
			<key>name</key>
			<string>constant.numeric.js</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*\*(?!/)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.documentation.js</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.js</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.html.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.html.js</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(&lt;!--|--&gt;)</string>
			<key>name</key>
			<string>comment.block.html.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(boolean|number|int|uint|string|function|object|sleep|var|const)\b</string>
			<key>name</key>
			<string>storage.type.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(export|like|static)\b</string>
			<key>name</key>
			<string>storage.modifier.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(break|case|catch|continue|default|do|else|finally|for|if|import|return|switch|throw|try|while|from)\b</string>
			<key>name</key>
			<string>keyword.control.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(delete|in|new|typeof|with)\b</string>
			<key>name</key>
			<string>keyword.operator.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\btrue\b</string>
			<key>name</key>
			<string>constant.language.boolean.true.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bfalse\b</string>
			<key>name</key>
			<string>constant.language.boolean.false.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bnull\b</string>
			<key>name</key>
			<string>constant.language.null.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(super|this)\b</string>
			<key>name</key>
			<string>variable.language.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(debugger)\b</string>
			<key>name</key>
			<string>keyword.other.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Object|Boolean|Number|String|Array|Function|Range|Symbol|Slot|Generator|Date|reflect|Map|WeakMap|Set|WeakSet|Math|JSON)\b</string>
			<key>name</key>
			<string>support.class.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>and|or|not|!|\$|%|&amp;|\*|\-\-|\-|\+\+|\+|~|~=|==|=|!=|!~=|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\:=|\b(in|new|delete|typeof|void|each|await|yield)\b</string>
			<key>name</key>
			<string>keyword.operator.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(inf|NaN|undefined)\b</string>
			<key>name</key>
			<string>constant.language.js</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=[=(:]|^|return|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)[igm]*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>,[ |\t]*</string>
			<key>name</key>
			<string>meta.delimiter.object.comma.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\.</string>
			<key>name</key>
			<string>meta.delimiter.method.period.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{|\}</string>
			<key>name</key>
			<string>meta.brace.curly.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(|\)</string>
			<key>name</key>
			<string>meta.brace.round.js</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]</string>
			<key>name</key>
			<string>meta.brace.square.js</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.js</string>
	<key>uuid</key>
	<string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
</dict>
</plist>
